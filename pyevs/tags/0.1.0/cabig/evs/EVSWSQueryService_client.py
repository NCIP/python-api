#L
# Copyright SAIC
#
# Distributed under the OSI-approved BSD 3-Clause License.
# See http://ncip.github.com/python-api/LICENSE.txt for details.
#L

##################################################
# file: EVSWSQueryService_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     /usr/bin/cacore2py
# 
##################################################

from EVSWSQueryService_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI
from ZSI.generate.pyclass import pyclass_type

# Locator
class EVSWSQueryServiceLocator:
    evsapi41Service_address = "http://evsapi.nci.nih.gov/evsapi41/services/evsapi41Service"
    def getevsapi41ServiceAddress(self):
        return EVSWSQueryServiceLocator.evsapi41Service_address
    def getevsapi41Service(self, url=None, **kw):
        return evsapi41ServiceSoapBindingSOAP(url or EVSWSQueryServiceLocator.evsapi41Service_address, **kw)

# Methods
class evsapi41ServiceSoapBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: query
    def query(self, request, **kw):
        if isinstance(request, queryRequest1) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(queryResponse1.typecode)
        return response

    # op: query
    def query(self, request, **kw):
        if isinstance(request, queryRequest1) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(queryResponse1.typecode)
        return response

    # op: queryObject
    def queryObject(self, request, **kw):
        if isinstance(request, queryObjectRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(queryObjectResponse.typecode)
        return response

_queryRequest1Typecode = Struct(pname=("http://webservice.system.nci.nih.gov","query"), ofwhat=[ZSI.TC.String(pname="methodName", aname="_methodName", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.AnyType(pname="criteria", aname="_criteria", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://webservice.system.nci.nih.gov")
class queryRequest1:
    typecode = _queryRequest1Typecode
    __metaclass__ = pyclass_type
    def __init__(self, **kw):
        """Keyword parameters:
        methodName -- part methodName
        criteria -- part criteria
        """
        self._methodName =  kw.get("methodName")
        self._criteria =  kw.get("criteria")
queryRequest1.typecode.pyclass = queryRequest1

_queryResponse1Typecode = Struct(pname=("http://webservice.system.nci.nih.gov","queryResponse"), ofwhat=[ns0.ArrayOf_xsd_anyType_Def(pname="queryReturn", aname="_queryReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://webservice.system.nci.nih.gov")
class queryResponse1:
    typecode = _queryResponse1Typecode
    __metaclass__ = pyclass_type
    def __init__(self, **kw):
        """Keyword parameters:
        queryReturn -- part queryReturn
        """
        self._queryReturn =  kw.get("queryReturn")
queryResponse1.typecode.pyclass = queryResponse1

_queryRequest1Typecode = Struct(pname=("http://webservice.system.nci.nih.gov","query"), ofwhat=[ZSI.TC.String(pname="methodName", aname="_methodName", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.AnyType(pname="criteria", aname="_criteria", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://webservice.system.nci.nih.gov")
class queryRequest1:
    typecode = _queryRequest1Typecode
    __metaclass__ = pyclass_type
    def __init__(self, **kw):
        """Keyword parameters:
        methodName -- part methodName
        criteria -- part criteria
        """
        self._methodName =  kw.get("methodName")
        self._criteria =  kw.get("criteria")
queryRequest1.typecode.pyclass = queryRequest1

_queryResponse1Typecode = Struct(pname=("http://webservice.system.nci.nih.gov","queryResponse"), ofwhat=[ns0.ArrayOf_xsd_anyType_Def(pname="queryReturn", aname="_queryReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://webservice.system.nci.nih.gov")
class queryResponse1:
    typecode = _queryResponse1Typecode
    __metaclass__ = pyclass_type
    def __init__(self, **kw):
        """Keyword parameters:
        queryReturn -- part queryReturn
        """
        self._queryReturn =  kw.get("queryReturn")
queryResponse1.typecode.pyclass = queryResponse1

_queryObjectRequestTypecode = Struct(pname=("http://webservice.system.nci.nih.gov","queryObject"), ofwhat=[ZSI.TC.String(pname="targetClassName", aname="_targetClassName", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True), ZSI.TC.AnyType(pname="criteria", aname="_criteria", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://webservice.system.nci.nih.gov")
class queryObjectRequest:
    typecode = _queryObjectRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self, **kw):
        """Keyword parameters:
        targetClassName -- part targetClassName
        criteria -- part criteria
        """
        self._targetClassName =  kw.get("targetClassName")
        self._criteria =  kw.get("criteria")
queryObjectRequest.typecode.pyclass = queryObjectRequest

_queryObjectResponseTypecode = Struct(pname=("http://webservice.system.nci.nih.gov","queryObjectResponse"), ofwhat=[ns0.ArrayOf_xsd_anyType_Def(pname="queryObjectReturn", aname="_queryObjectReturn", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://webservice.system.nci.nih.gov")
class queryObjectResponse:
    typecode = _queryObjectResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self, **kw):
        """Keyword parameters:
        queryObjectReturn -- part queryObjectReturn
        """
        self._queryObjectReturn =  kw.get("queryObjectReturn")
queryObjectResponse.typecode.pyclass = queryObjectResponse
